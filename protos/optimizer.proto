syntax = "proto2";

package fast_semantic_segmentation.protos;

message Optimizer {
    oneof optimizer {
        MomentumOptimizer momentum_optimizer = 1;
        AdamOptimizer adam_optimizer = 2;
    }
}

message MomentumOptimizer {
    optional LearningRate learning_rate = 1;
    optional float momentum_optimizer_value = 2 [default = 0.9];
}

message AdamOptimizer {
    optional LearningRate learning_rate = 1;
}

message LearningRate {
    oneof learning_rate {
        ConstantLearningRate constant_learning_rate = 1;
        ExponentialDecayLearningRate exponential_decay_learning_rate = 2;
        PolynomialDecayLearningRate polynomial_decay_learning_rate = 3;
    }
}

message ConstantLearningRate {
    optional float learning_rate = 1 [default = 0.002];
}

message ExponentialDecayLearningRate {
    optional float initial_learning_rate = 1 [default = 0.002];
    optional uint32 decay_steps = 2 [default = 4000000];
    optional float decay_factor = 3 [default = 0.95];
    optional bool staircase = 4 [default = true];
}

message PolynomialDecayLearningRate {
    optional float initial_learning_rate = 1 [default = 0.0001];
    optional uint32 decay_steps = 2 [default = 4000000];
    optional float power = 3 [default = 0.9];
}