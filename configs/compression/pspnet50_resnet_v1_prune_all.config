# Prune config for pruning all Conv Layers in PSPNet with ResNet50 V1 Backbone.
#
#
# Filter pruning for residual blocks:
#
# The config applies the principal that the feature maps to be pruned at
# residual blocks should be determined by the pruning results of
# the shortcut layer.
#
# This is also applied to prune the PSPModule, except we choose to not prune
# the Conv layers within each multi-scale branch in order to stay consistent
# with the above principal. We prune the module as follows, where the first
# block is the last Conv node in the ResNet-50 feature extractor:
#
#              +-------+                                +-------+
#              |       |                                |       |
#              |  2048 |           +---------->         |  1024 |
#              |       |                                |       |
#              +---+---+                                +---+---+
#                  |                                        |
#  +-------+---------------+-------+        +-------+---------------+-------+
#  |       |       |       |       |        |       |       |       |       |
#  |     +-v-+   +-v-+   +-v-+   +-v-+      |     +-v-+   +-v-+   +-v-+   +-v-+
#  |     |512|   |512|   |512|   |512| +--> |     |512|   |512|   |512|   |512|
#  |     +-+-+   +-+-+   +-+-+   +-+-+      |     +-+-+   +-+-+   +-+-+   +-+-+
#  |       |       |       |       |        |       |       |       |       |
#  +-------+---------------+-------+        +-------+---------------+-------+
#                  |                                        |
#             +----v----+                              +----v----+
#             |         |                              |         |
#             |  Concat |         +------------>       |  Concat |
#             |         |                              |         |
#             +----+----+                              +----+----+
#                  |                                        |
#              +---v---+                                +---v---+
#              |       |                                |       |
#              |  4096 |          +------------>        |  3072 |
#              |       |                                |       |
#              +-------+                                +-------+
#
# See the paper https://arxiv.org/abs/1608.08710 for more information.

compression_strategy {
    filter_pruner {

        input { name: "Preprocessor/sub" }

        output { name: "Predictions/Conv/BiasAdd" }

        node_scope: "SharedFeatureExtractor/resnet_v1_50"


        #
        # Skip inner PSPModule Conv layers
        #
        skip_node {
            name: "PSPModule/Conv/Conv2D"
        }
        skip_node {
            name: "PSPModule/Conv_1/Conv2D"
        }
        skip_node {
            name: "PSPModule/Conv_2/Conv2D"
        }
        skip_node {
            name: "PSPModule/Conv_3/Conv2D"
        }


        #
        # ** MAIN_SHORTCUT_1: Block_1 - Unit_1 w/ Conv Shortcut **
        #
        node {
            target {
                name: "block1/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
            }
            # Block_1 - Unit_2
            following {
                name: "block1/unit_2/bottleneck_v1/conv1/Conv2D"
            }
        }
        node {
            # PARALLEL CONV
            target {
                name: "block1/unit_1/bottleneck_v1/conv3/Conv2D"
            }
            # MAIN_SHORTCUT_1
            source {
                name: "block1/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
        }
        # Block_1 - Unit_2
        node {
            target {
                name: "block1/unit_2/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_1 - Unit_3
            following {
                name: "block1/unit_3/bottleneck_v1/conv1/Conv2D"
            }
        }


        #
        # ** MAIN_SHORTCUT_2: Block_1 - Unit_3 w/ Conv Shortcut **
        #
        node {
            target {
                name: "block2/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
            }
            # Block_2 - Unit_2
            following {
                name: "block2/unit_2/bottleneck_v1/conv1/Conv2D"
            }
        }
        node {
            # PARALLEL CONV
            target {
                name: "block2/unit_1/bottleneck_v1/conv3/Conv2D"
            }
            # MAIN_SHORTCUT_2
            source {
                name: "block2/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
        }
        # Block_2 - Unit_2
        node {
            target {
                name: "block2/unit_2/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_2 - Unit_3
            following {
                name: "block2/unit_3/bottleneck_v1/conv1/Conv2D"
            }
        }
        # Block_2 - Unit_3
        node {
            target {
                name: "block2/unit_3/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_2 - Unit_4
            following {
                name: "block2/unit_4/bottleneck_v1/conv1/Conv2D"
            }
        }


        #
        # ** MAIN_SHORTCUT_3: Block_3 - Unit_1 w/ Conv Shortcut **
        #
        node {
            target {
                name: "block3/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
            }
            # Block_3 - Unit_2
            following {
                name: "block3/unit_2/bottleneck_v1/conv1/Conv2D"
            }
        }
        node {
            # PARALLEL CONV
            target {
                name: "block3/unit_1/bottleneck_v1/conv3/Conv2D"
            }
            # MAIN_SHORTCUT_3
            source {
                name: "block3/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
        }
        # Block_3 - Unit_2
        node {
            target {
                name: "block3/unit_2/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_3 - Unit_3
            following {
                name: "block3/unit_3/bottleneck_v1/conv1/Conv2D"
            }
        }
        # Block_3 - Unit_3
        node {
            target {
                name: "block3/unit_3/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_3 - Unit_4
            following {
                name: "block3/unit_4/bottleneck_v1/conv1/Conv2D"
            }
        }
        # Block_3 - Unit_4
        node {
            target {
                name: "block3/unit_4/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_3 - Unit_5
            following {
                name: "block3/unit_5/bottleneck_v1/conv1/Conv2D"
            }
        }
        # Block_3 - Unit_5
        node {
            target {
                name: "block3/unit_5/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_3 - Unit_6
            following {
                name: "block3/unit_6/bottleneck_v1/conv1/Conv2D"
            }
        }


        #
        # ** MAIN_SHORTCUT_4: Block_4 - Unit_1 w/ Conv Shortcut **
        #
        node {
            target {
                name: "block4/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
            }
            # Block_4 - Unit_2
            following {
                name: "block4/unit_2/bottleneck_v1/conv1/Conv2D"
            }
        }
        node {
            # PARALLEL CONV
            target {
                name: "block4/unit_1/bottleneck_v1/conv3/Conv2D"
            }
            # MAIN_SHORTCUT_4
            source {
                name: "block4/unit_1/bottleneck_v1/shortcut/Conv2D"
            }
            following {
                name: "block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
        }
        # Block_4 - Unit_2
        node {
            target {
                name: "block4/unit_2/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            # Block_4 - Unit_3
            following {
                name: "block4/unit_3/bottleneck_v1/conv1/Conv2D"
            }
        }
        # Block_4 - Unit_3
        node {
            target {
                name: "block4/unit_3/bottleneck_v1/conv3/Conv2D"
            }
            following {
                name: "block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
            }
            following {
                name: "...PSPModule/Conv/Conv2D"
            }
            following {
                name: "...PSPModule/Conv_1/Conv2D"
            }
            following {
                name: "...PSPModule/Conv_2/Conv2D"
            }
            following {
                name: "...PSPModule/Conv_3/Conv2D"
            }
            # Output Conv
            following {
                name: "...PSPModule/Conv_4/Conv2D"
            }
        }
    }
}